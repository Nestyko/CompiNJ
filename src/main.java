
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author clases
 */
public class main extends javax.swing.JFrame {


    static Lexico lexicoframe;
    
    /**
     * Creates new form NewJFrame
     */
    public main() {
        initComponents();
        Entrada.requestFocus();
    }
    boolean aux=true;
     int status;
    boolean isopen = false;
    File FicherOpen;
    FileNameExtensionFilter filtro = new FileNameExtensionFilter("*.TXT", "txt");
   
     static int showOpenDialog(Object object) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    static File getSelectedFile() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        Panel_menu = new javax.swing.JPanel();
        cut = new javax.swing.JButton();
        copy = new javax.swing.JButton();
        paste = new javax.swing.JButton();
        alinear_centrar = new javax.swing.JButton();
        alinear_izquierda = new javax.swing.JButton();
        alinear_derecha = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        Oculta_ver = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Entrada = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        Archivo = new javax.swing.JMenu();
        abrir = new javax.swing.JMenuItem();
        guardar = new javax.swing.JMenuItem();
        salir = new javax.swing.JMenuItem();
        analisis = new javax.swing.JMenu();
        lexico = new javax.swing.JMenuItem();
        sintactico = new javax.swing.JMenuItem();
        semantico = new javax.swing.JMenuItem();
        todos = new javax.swing.JMenuItem();
        ver = new javax.swing.JMenu();
        simbolos = new javax.swing.JMenuItem();

        jFileChooser1.setFileFilter(new MyCustomFilter());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CompiNJ");
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);

        Panel_menu.setBackground(new java.awt.Color(51, 51, 51));

        cut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/copypaste/cut.jpg"))); // NOI18N
        cut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutActionPerformed(evt);
            }
        });

        copy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/copypaste/copy.jpg"))); // NOI18N
        copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyActionPerformed(evt);
            }
        });

        paste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/copypaste/paste.jpg"))); // NOI18N
        paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteActionPerformed(evt);
            }
        });

        alinear_centrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/texto/centro.png"))); // NOI18N
        alinear_centrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alinear_centrarActionPerformed(evt);
            }
        });

        alinear_izquierda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/texto/izquierda.png"))); // NOI18N
        alinear_izquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alinear_izquierdaActionPerformed(evt);
            }
        });

        alinear_derecha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/texto/derecha.png"))); // NOI18N
        alinear_derecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alinear_derechaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_menuLayout = new javax.swing.GroupLayout(Panel_menu);
        Panel_menu.setLayout(Panel_menuLayout);
        Panel_menuLayout.setHorizontalGroup(
            Panel_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(Panel_menuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_menuLayout.createSequentialGroup()
                        .addGroup(Panel_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(alinear_centrar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(alinear_izquierda, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Panel_menuLayout.createSequentialGroup()
                        .addGroup(Panel_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Panel_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cut, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(paste, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(copy, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addComponent(alinear_derecha, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        Panel_menuLayout.setVerticalGroup(
            Panel_menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_menuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(copy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(paste)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(alinear_izquierda, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(alinear_centrar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(alinear_derecha)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Oculta_ver.setBackground(new java.awt.Color(204, 255, 255));
        Oculta_ver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/flecha.png"))); // NOI18N
        Oculta_ver.setToolTipText("");
        Oculta_ver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Oculta_verActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(Entrada);

        Archivo.setText("Archivo");

        abrir.setText("Abrir");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        Archivo.add(abrir);

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        Archivo.add(guardar);

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        Archivo.add(salir);

        jMenuBar1.add(Archivo);

        analisis.setText("Analisis");

        lexico.setText("Lexico");
        lexico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lexicoActionPerformed(evt);
            }
        });
        analisis.add(lexico);

        sintactico.setText("sintáctico");
        sintactico.setEnabled(false);
        sintactico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sintacticoActionPerformed(evt);
            }
        });
        analisis.add(sintactico);

        semantico.setText("semantico");
        analisis.add(semantico);

        todos.setText("todos");
        todos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todosActionPerformed(evt);
            }
        });
        analisis.add(todos);

        jMenuBar1.add(analisis);

        ver.setText("Ver");

        simbolos.setText("Ver Tabla ");
        simbolos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simbolosActionPerformed(evt);
            }
        });
        ver.add(simbolos);

        jMenuBar1.add(ver);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Panel_menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Oculta_ver, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addComponent(Oculta_ver, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Panel_menu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_salirActionPerformed

    private void Oculta_verActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Oculta_verActionPerformed
        if (aux) {
            Panel_menu.setVisible(false);
            aux=false;
        }
        else{
            Panel_menu.setVisible(true);
            aux=true;
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_Oculta_verActionPerformed

    private void alinear_izquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alinear_izquierdaActionPerformed
        StyledDocument st = Entrada.getStyledDocument();
        SimpleAttributeSet bSet = new SimpleAttributeSet();
        StyleConstants.setAlignment(bSet, StyleConstants.ALIGN_LEFT);
        st.setParagraphAttributes(0, Entrada.getText().length(), bSet, false);
            // TODO add your handling code here:
    }//GEN-LAST:event_alinear_izquierdaActionPerformed

    private void alinear_centrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alinear_centrarActionPerformed
        StyledDocument st = Entrada.getStyledDocument();
        SimpleAttributeSet bSet = new SimpleAttributeSet();
        StyleConstants.setAlignment(bSet, StyleConstants.ALIGN_CENTER);
        st.setParagraphAttributes(0, Entrada.getText().length(), bSet, false);   // TODO add your handling code here:
    }//GEN-LAST:event_alinear_centrarActionPerformed

    private void copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyActionPerformed
       Entrada.copy();      // TODO add your handling code here:
    }//GEN-LAST:event_copyActionPerformed

    private void cutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutActionPerformed
      Entrada.cut();// TODO add your handling code here:
    }//GEN-LAST:event_cutActionPerformed

    private void pasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteActionPerformed
      Entrada.paste();// TODO add your handling code here:
    }//GEN-LAST:event_pasteActionPerformed

    private void alinear_derechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alinear_derechaActionPerformed
        
        StyledDocument st = Entrada.getStyledDocument();
        SimpleAttributeSet bSet = new SimpleAttributeSet();
        StyleConstants.setAlignment(bSet, StyleConstants.ALIGN_RIGHT);
        st.setParagraphAttributes(0, Entrada.getText().length(), bSet, false);
        // TODO add your handling code here:
    }//GEN-LAST:event_alinear_derechaActionPerformed

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        Abrir();         // TODO add your handling code here:
    }//GEN-LAST:event_abrirActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
          if(isopen != false) {
            Guardar();
        } else {
            GuardaComo();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_guardarActionPerformed

    private void simbolosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simbolosActionPerformed
        VistasTablas vistasTablas = new VistasTablas();
        vistasTablas.setVisible(true);
        
        //vistasTablas.setSimbols(simbols);
        //vistasTablas.setReservedWords(reserved_words);
        
    }//GEN-LAST:event_simbolosActionPerformed

    private void lexicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lexicoActionPerformed
        lexicoframe =  new Lexico(Entrada.getText());  
        lexicoframe.setVisible(true);
           // TODO add your handling code here:
    }//GEN-LAST:event_lexicoActionPerformed

    private void todosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todosActionPerformed
        String Salida;
        Salida = Entrada.getText().replaceAll(" ", "").replaceAll("\n","");
        System.out.print(Salida);       // TODO add your handling code here:
    }//GEN-LAST:event_todosActionPerformed

    private void sintacticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sintacticoActionPerformed
        new Sintatico(Entrada.getText()).setVisible(true);
        setVisible(false);// TODO add your handling code here:
    }//GEN-LAST:event_sintacticoActionPerformed
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

  private void Abrir() {
        status = jFileChooser1.showOpenDialog(null);
        if (status == JFileChooser.APPROVE_OPTION) {
            //limpiar el area de texto
            Entrada.setText("");
            String aux = null;
            try {
                /**
                 * abrimos el archivo seleccionado
                 */
                File archivo = jFileChooser1.getSelectedFile();
                if (archivo != null) {
                    FileReader fr = new FileReader(archivo);
                    try (BufferedReader lee = new BufferedReader(fr)) {
                        while ((aux = lee.readLine()) != null) {
                        Entrada.setText(Entrada.getText() + "\n" + aux);
                        }
                    }
                    isopen = true; //validamos de que se abrio un archivo
                    //Guardamos la ruta del archivo
                    FicherOpen = jFileChooser1.getSelectedFile();
                    System.out.println(FicherOpen);
                }
                setTitle("CompiNJ ("+archivo.getAbsolutePath()+")");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex + ""
                        + "No se ha encontrado el archivo",
                        "ADVERTENCIA!!!", JOptionPane.WARNING_MESSAGE);
            }//El texto se almacena en el JTextArea
        }
        
              

    }

   private void Guardar() {
        /*Creo un nombre para el nuevo fichero */
        String SnombFichNuev = FicherOpen.getName() + "-" + "Temporal" + ".txt";
        /*Crea un objeto File para el fichero nuevo*/
        File FficheroNuevo = new File(SnombFichNuev);
        try {
            /*Si existe el fichero inical*/
            if (FicherOpen.exists()) {
                //Escribimos en el archivo con el metodo write
                //Crear objeto FileWriter que sera el que nos ayude a escribir sobre archivo
                try (FileWriter escribir = new FileWriter(FficheroNuevo, true)) {
                    //Escribimos en el archivo con el metodo write
                    escribir.write(Entrada.getText());
                    //Cerramos la conexion
                }
                /*Obtengo el nombre del fichero inicial*/
                String SnomAntiguo = FicherOpen.getName();
                /*Borro el fichero inicial*/
                FicherOpen.delete();
                /*renombro el nuevo fichero con el nombre del fichero inicial*/
                FficheroNuevo.renameTo(FicherOpen);
            } else {
                System.out.println("Fichero No Existe");
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    } 
   
     private void GuardaComo() {
        status = jFileChooser1.showSaveDialog(jMenuBar1);
        if (status == JFileChooser.APPROVE_OPTION) {
            try {
                File guarda = new File(jFileChooser1.getSelectedFile().toString() + ".txt");
                FileWriter save = new FileWriter(guarda);
                save.write(Entrada.getText());
                save.close();
                isopen = true;
                //Guardamos la ruta del fichero
                FicherOpen = jFileChooser1.getSelectedFile();
                JOptionPane.showMessageDialog(null,
                        "El archivo se a guardado Exitosamente",
                        "Información", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
     
     

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Archivo;
    public static javax.swing.JTextPane Entrada;
    private javax.swing.JButton Oculta_ver;
    private javax.swing.JPanel Panel_menu;
    private javax.swing.JMenuItem abrir;
    private javax.swing.JButton alinear_centrar;
    private javax.swing.JButton alinear_derecha;
    private javax.swing.JButton alinear_izquierda;
    private javax.swing.JMenu analisis;
    private javax.swing.JButton copy;
    private javax.swing.JButton cut;
    private javax.swing.JMenuItem guardar;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenuItem lexico;
    private javax.swing.JButton paste;
    private javax.swing.JMenuItem salir;
    private javax.swing.JMenuItem semantico;
    private javax.swing.JMenuItem simbolos;
    public static javax.swing.JMenuItem sintactico;
    private javax.swing.JMenuItem todos;
    private javax.swing.JMenu ver;
    // End of variables declaration//GEN-END:variables
}

    class MyCustomFilter extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with ".txt" extension
            return file.isDirectory() || file.getAbsolutePath().endsWith(".txt");
        }
        @Override
        public String getDescription() {
            // This description will be displayed in the dialog,
            // hard-coded = ugly, should be done via I18N
            return "Documentos De Texto (*.txt)";
        }
    }